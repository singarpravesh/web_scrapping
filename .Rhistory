remove(json_ld_data)
remove(json_ld_script)
remove(html_page)
remove(rD)
remove(remDr)
gc()
library(RSelenium)
library(rvest)
library(jsonlite)
library(dplyr)
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# Initialize RSelenium
rD <- rsDriver(browser="firefox", chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Navigate to the URL
remDr$navigate(urls[9])
# Helper function to safely find and click an element
safe_find_and_click <- function(using, value) {
tryCatch({
elem <- remDr$findElement(using = using, value = value)
elem$clickElement()
TRUE
}, error = function(e) {
if (grepl("NoSuchElement", e$message)) {
message("Element not found: ", value)
} else {
message("Error: ", e$message)
}
FALSE
})
}
# Helper function to safely find and extract elements' text
safe_find_and_extract <- function(using, value) {
tryCatch({
elems <- remDr$findElements(using = using, value = value)
sapply(elems, function(x) { x$getElementText()[[1]] })
}, error = function(e) {
message("Error: ", e$message)
NULL
})
}
# Click the OK button
safe_find_and_click("css", ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")
# Data for price
Price <- safe_find_and_extract("xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']")
# BHK data
Bhk <- safe_find_and_extract("xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']")
# Area data
Area_sqft <- safe_find_and_extract("xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") %>% list()
# Coordinates of the property
tryCatch({
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude <- json_ld_data[[3]]$geo$latitude
Longitude <- json_ld_data[[3]]$geo$longitude
}, error = function(e) {
message("Coordinates not found: ", e$message)
})
# Top facilities
tryCatch({
Top_facilities <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
}, error = function(e) {
message("Top facilities not found: ", e$message)
})
# Other facilities
tryCatch({
remDr$executeScript("window.scrollTo(0,1600);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (safe_find_and_click("css", ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")) {
html_page <- remDr$getPageSource()[[1]] # Get the HTML content of the pop up page after click
Other_facilities <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
}
}, error = function(e) {
message("Other facilities not found: ", e$message)
})
# Locational advantages
tryCatch({
remDr$executeScript("window.scrollTo(0,2100);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (safe_find_and_click("css", ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")) {
html_page <- remDr$getPageSource()[[1]]
Locational_advantages <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
Distance_to_locational_advantage <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
}
}, error = function(e) {
message("Locational advantages not found: ", e$message)
})
# Close the RSelenium session
remDr$close()
rD$server$stop()
remDr$closeWindow()
library(RSelenium)
library(rvest)
library(jsonlite)
library(dplyr)
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# Initialize RSelenium
rD <- rsDriver(browser="firefox", chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Navigate to the URL
remDr$navigate(urls[9])
# Helper function to check if element exists
element_exists <- function(using, value) {
length(remDr$findElements(using = using, value = value)) > 0
}
# Click the OK button if it exists
if (element_exists("css", ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")) {
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
} else {
message("OK button not found or could not be clicked")
}
# Data for price
if (element_exists("xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']")) {
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
message("Price elements not found")
}
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# Initialize RSelenium
rD <- rsDriver(browser="firefox", chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Navigate to the URL
remDr$navigate(urls[9])
# Helper function to check if element exists
element_exists <- function(using, value) {
length(remDr$findElements(using = using, value = value)) > 0
}
# Click the OK button if it exists
if (element_exists("css", ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")) {
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
} else {
message("OK button not found or could not be clicked")
}
# Data for price
if (element_exists("xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']")) {
Price <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
message("Price elements not found")
}
# BHK data
if (element_exists("xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']")) {
Bhk <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
message("BHK elements not found")
}
# Area data
if (element_exists("xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']")) {
Area_sqft <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
} else {
message("Area elements not found")
}
# Coordinates of the property
tryCatch({
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude <- json_ld_data[[3]]$geo$latitude
Longitude <- json_ld_data[[3]]$geo$longitude
}, error = function(e) {
message("Coordinates not found: ", e$message)
})
# Top facilities
tryCatch({
Top_facilities <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
}, error = function(e) {
message("Top facilities not found: ", e$message)
})
# Other facilities
tryCatch({
remDr$executeScript("window.scrollTo(0,1600);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (element_exists("css", ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]] # Get the HTML content of the pop up page after click
Other_facilities <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
} else {
message("Other facilities 'View all' button not found")
}
}, error = function(e) {
message("Other facilities not found: ", e$message)
})
# Locational advantages
tryCatch({
remDr$executeScript("window.scrollTo(0,2100);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (element_exists("css", ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
Distance_to_locational_advantage <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
} else {
message("Locational advantages 'View all' button not found")
}
}, error = function(e) {
message("Locational advantages not found: ", e$message)
})
View(Locational_advantages)
remDr$closeWindow()
rD$server$stop()
# Remove the objects that can clutter the environment
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(html_page)
remove(rD)
remove(remDr)
gc()
library(RSelenium)
library(rvest)
library(jsonlite)
library(dplyr)
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# Initialize RSelenium
rD <- rsDriver(browser="firefox", chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Navigate to the URL
remDr$navigate(urls[9])
# Helper function to check if element exists
element_exists <- function(using, value) {
length(remDr$findElements(using = using, value = value)) > 0
}
# Click the OK button if it exists
if (element_exists("css", ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")) {
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
} else {
message("OK button not found or could not be clicked")
}
# Data for price
if (element_exists("xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']")) {
Price <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
Price <- NA
}
# BHK data
if (element_exists("xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']")) {
Bhk <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
Bhk <- NA
}
# Area data
if (element_exists("xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']")) {
Area_sqft <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
} else {
Area_sqft <- NA
}
# Coordinates of the property
tryCatch({
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude <- json_ld_data[[3]]$geo$latitude
Longitude <- json_ld_data[[3]]$geo$longitude
}, error = function(e) {
message("Coordinates not found: ", e$message)
})
# Top facilities
tryCatch({
Top_facilities <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
}, error = function(e) {
message("Top facilities not found: ", e$message)
})
# Other facilities
tryCatch({
remDr$executeScript("window.scrollTo(0,1600);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (element_exists("css", ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]] # Get the HTML content of the pop up page after click
Other_facilities <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
} else {
Other_facilities <- NA
}
}, error = function(e) {
message("Other facilities not found: ", e$message)
})
# Locational advantages
tryCatch({
remDr$executeScript("window.scrollTo(0,2100);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (element_exists("css", ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
Distance_to_locational_advantage <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
} else {
message("Locational advantages 'View all' button not found")
}
}, error = function(e) {
message("Locational advantages not found: ", e$message)
})
Latitude
Longitude
Top_facilities
Other_facilities
Locational_advantages
Distance_to_locational_advantage
remDr$closeWindow()
rD$server$stop()
# Remove the objects that can clutter the environment
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(html_page)
remove(rD)
remove(remDr)
gc()
library(RSelenium)
library(rvest)
library(jsonlite)
library(dplyr)
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# Initialize RSelenium
rD <- rsDriver(browser="firefox", chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Navigate to the URL
remDr$navigate(urls[9])
# Helper function to check if element exists
element_exists <- function(using, value) {
length(remDr$findElements(using = using, value = value)) > 0
}
# Click the OK button if it exists
if (element_exists("css", ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")) {
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
} else {
message("OK button not found or could not be clicked")
}
# Data for price
if (element_exists("xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']")) {
Price <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
Price <- NA
}
# BHK data
if (element_exists("xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']")) {
Bhk <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
Bhk <- NA
}
# Area data
if (element_exists("xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']")) {
Area_sqft <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
} else {
Area_sqft <- NA
}
# Coordinates of the property
tryCatch({
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude <- json_ld_data[[3]]$geo$latitude
Longitude <- json_ld_data[[3]]$geo$longitude
}, error = function(e) {
message("Coordinates not found: ", e$message)
})
# Top facilities
tryCatch({
Top_facilities <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
}, error = function(e) {
message("Top facilities not found: ", e$message)
})
# Other facilities
tryCatch({
remDr$executeScript("window.scrollTo(0,1600);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (element_exists("css", ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]] # Get the HTML content of the pop up page after click
Other_facilities <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
} else {
Other_facilities <- NA
}
}, error = function(e) {
message("Other facilities not found: ", e$message)
})
# Locational advantages
tryCatch({
remDr$executeScript("window.scrollTo(0,2100);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (element_exists("css", ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
} else {
Locational_advantages <- NA
}
if (Locational_advantages != NA){
Distance_to_locational_advantage <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
} else {
Distance_to_locational_advantage <- NA
}
}, error = function(e) {
message("Locational advantages not found: ", e$message)
})
Locational_advantages
Distance_to_locational_advantage
