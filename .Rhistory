library(jsonlite)
library(readr)
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Price_sqft <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Price_sqft[i] <- remDr$findElements(using = "xpath", '//*[@class="areaRate__avgPrice"]')
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Price_sqft <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Price_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']")
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Price_sqft <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Price_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
house_data <- tibble(price = Price,
bhk = Bhk,
price_sqft = Price_sqft,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']")
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']")
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Price_sqft <- c()
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']")
198/1700
19800000/1700
remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']")
remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]})
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
library(readr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Area_sqft <- c()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Area_sqft <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
Area_sqft
remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]})
house_data <- tibble(price = Price,
bhk = Bhk,
area_sqft = Area_sqft,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
library(readr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Area_sqft <- c()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
library(readr)
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Area_sqft <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
library(readr)
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Area_sqft <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
house_data <- tibble(price = Price,
bhk = Bhk,
area_sqft = Area_sqft,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
urls
Facilities <- c()
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr$closeWindow()
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
remDr$findElements(using = "xpath", "//*[@class='pageComponent']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$findElements(using = "xpath", "//*[@class='pageComponent']")
remDr$findElements(using = "xpath", "//*[@class='pageComponent']")$clickElement()
remDr$findElements(using = "xpath", "//*[@class='pageComponent']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])$clickElement()
remDr$findElements(using = "xpath", "//*[@class='pageComponent']")
remDr$findElements(using = "xpath", "//*[@class='pageComponent']") |>
sapply(function(x){x$getElementAttribute("href")})
remDr$findElements(using = "xpath", "//*[@class='pageComponent']") |>
sapply(function(x){x$getElementAttribute("href")}[[8]])
remDr$findElements(using = "xpath", "//*[@class='pageComponent']") |>
sapply(function(x){x$getElementAttribute("href")})[[8]]
remDr$findElements(using = "xpath", "//*[@class='pageComponent']") |>
sapply(function(x){x$getElementAttribute("href")})$clickElement()
remDr$findElements(using = "xpath", "//*[@class='pageComponent']") |>
sapply(function(x){x$getElementAttribute("href")})
a <- remDr$findElements(using = "xpath", "//*[@class='pageComponent']") |>
sapply(function(x){x$getElementAttribute("href")})
a[[8]]
a[[8]][1]
a[[8]][[[1]]
a[[8]][[1]]
a[[8]][[1]]$clickElement()
remDr$findElements(using = "css", value = "html.has-webp body.pageComponent.ProjectDetailV2Desktop__customClass div#app div div.ProjectDetailV2Desktop__mainWrapper.undefined div.OrderComponent__leftSection div#top-facilities div div#top-facilities div#uniqueFacility.pageComponent div div.pl16 div.UniquesFacilities__pageHeadingWrapper a.pageComponent")$clickElement()
remDr$findElements(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
html_page
read_html(html_page) |>
html_nodes('div[class="body_med"]')
read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text()
remDr$closeWindow()
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
html_page_main <- remDr$getPageSource()[[1]]
html_page_main <- remDr$getPageSource()[[1]]
read_html(html_page_main) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]')
read_html(html_page_main) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text()
Top_facilities <- c()
Other_facilities <- c()
remDr$closeWindow()
remove(html_page_main)
remove(html_page)
remove(rD)
remove(remDr)
remove(a)
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html_page_main <- remDr$getPageSource()[[1]]
Top_facilities[i] <- read_html(html_page_main) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text()
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text()
remDr$closeWindow()
remove(html_page_main)
remove(html_page)
remove(rD)
remove(remDr)
}
Top_facilities
Top_facilities <- list()
Other_facilities <- list()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html_page_main <- remDr$getPageSource()[[1]]
Top_facilities[i] <- read_html(html_page_main) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text()
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text()
remDr$closeWindow()
remove(html_page_main)
remove(html_page)
remove(rD)
remove(remDr)
}
