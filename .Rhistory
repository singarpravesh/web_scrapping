html_text() %>% list()
Distance_to_locational_advantage[i] <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(html_page)
}
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# Scrape the data in page 1
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
for (i in 1:2){
remDr$navigate(urls[i])
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
Top_facilities[i] <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
remDr$executeScript("window.scrollTo(0,1400);")
remDr$setTimeout(type = "implicit", milliseconds = 2000)
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
remDr$executeScript("window.scrollTo(0,1700);")
remDr$setTimeout(type = "implicit", milliseconds = 2000)
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages[i] <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
Distance_to_locational_advantage[i] <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(html_page)
}
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# Scrape the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
Top_facilities[i] <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
remDr$executeScript("window.scrollTo(0,1400);")
remDr$setTimeout(type = "implicit", milliseconds = 2000)
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
remDr$executeScript("window.scrollTo(0,1700);")
remDr$setTimeout(type = "implicit", milliseconds = 2000)
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages[i] <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
Distance_to_locational_advantage[i] <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
remove(html_page)
}
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# Scrape the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
Top_facilities[i] <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
remDr$executeScript("window.scrollTo(0,1400);")
remDr$setTimeout(type = "implicit", milliseconds = 2000)
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
remDr$executeScript("window.scrollTo(0,1700);")
remDr$setTimeout(type = "implicit", milliseconds = 2000)
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages[i] <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
Distance_to_locational_advantage[i] <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
remove(html_page)
}
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# Scrape the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
Top_facilities[i] <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
remDr$executeScript("window.scrollTo(0,1400);")
remDr$setTimeout(type = "implicit", milliseconds = 5000)
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
remDr$executeScript("window.scrollTo(0,1700);")
remDr$setTimeout(type = "implicit", milliseconds = 2000)
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages[i] <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
Distance_to_locational_advantage[i] <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
remove(html_page)
}
house_data <- tibble(price = Price,
bhk = Bhk,
area_sqft = Area_sqft,
top_facilities = Top_facilities,
other_facilities = Other_facilities,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
house_data %>% select(area_sqft) %>% unlist()
house_data %>% select(area_sqft)
house_data %>% select(area_sqft)[[1]]
house_data$area_sqft[[1]]
house_data$area_sqft[[2]]
house_data$top_facilities[[2]]
house_data <- tibble(price = Price,
bhk = Bhk,
loactional_advantages = Locational_advantages,
distance_to_locational_advantage = Distance_to_locational_advantage,
area_sqft = Area_sqft,
top_facilities = Top_facilities,
other_facilities = Other_facilities,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
house_data$distance_to_locational_advantage[1]
house_data$locational_advantages[1]
house_data <- tibble(price = Price,
bhk = Bhk,
locational_advantages = Locational_advantages,
distance_to_locational_advantage = Distance_to_locational_advantage,
area_sqft = Area_sqft,
top_facilities = Top_facilities,
other_facilities = Other_facilities,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data$locational_advantages[1]
house_data$distance_to_locational_advantage[1]
length(urls)
paste0("https://www.99acres.com/property-in-kolkata-ffid-page", j)
paste0("https://www.99acres.com/property-in-kolkata-ffid-page", 2)
##########################################################################
# Activate firefox
for (j in 2:100){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# navigate to page j
remDr$navigate(paste0("https://www.99acres.com/property-in-kolkata-ffid-page", j))
# Get all the urls in page j
urls2[j] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]]) %>%
list()
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
library(readr)
##########################################################################
# Activate firefox
for (j in 2:100){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# navigate to page j
remDr$navigate(paste0("https://www.99acres.com/property-in-kolkata-ffid-page", j))
# Get all the urls in page j
urls2[j] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]]) %>%
list()
}
urls2 <- list()
for (j in 2:4){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# navigate to page j
remDr$navigate(paste0("https://www.99acres.com/property-in-kolkata-ffid-page", j))
# Get all the urls in page j
urls2[j] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]]) %>%
list()
}
urls2
urls2[[2]]
urls2[[2]][1]
length(urls2)
length(unlist(urls2))
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
remove(html_page)
for (i in 1:length(unlist(urls2))){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
# Click the ok button
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
# Data for price
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# BHK data
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# Area data
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
# Coordinates of the property
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
# Top facilities
Top_facilities[i] <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
# Other facilities
remDr$executeScript("window.scrollTo(0,1400);") # Need to scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 5000) # Need to wait to load the page in the remote driver
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement() # Click on the View all button
html_page <- remDr$getPageSource()[[1]] # get the html content of the pop up page after click
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
# Locational advantages (do the same as for 'other failities' above)
remDr$executeScript("window.scrollTo(0,1700);")
remDr$setTimeout(type = "implicit", milliseconds = 2000)
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages[i] <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
# Distance to locational advantages as specified above.
Distance_to_locational_advantage[i] <- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
# Close the remote firefox window
remDr$closeWindow()
# Remove the objects that can clutter the environment
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
remove(html_page)
}
house_data <- tibble(price = Price,
bhk = Bhk,
locational_advantages = Locational_advantages,
distance_to_locational_advantage = Distance_to_locational_advantage,
area_sqft = Area_sqft,
top_facilities = Top_facilities,
other_facilities = Other_facilities,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
remove(html_page)
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
remove(html_page)
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
# install.packages("remotes") # Uncomment if you do not have the 'remotes' package installed
remotes::install_github("sachit27/greenR", dependencies = TRUE)
library(greenR)
data <- get_osm_data("Kolkata, India")
green_areas_data <- data$green_areas
green_areas_data
visualize_green_spaces(green_areas_data)
data
green_areas_data %>%
group_by(landuse)
green_areas_data$landuse
green_areas_data$landuse[[1]]
green_areas_data$osm_polygons$landuse[[1]]
green_areas_data$osm_polygons$landuse
green_areas_data$osm_polygons %>%
group_by(landuse)
green_areas_data$osm_polygons %>%
select(landuse) %>%
group_by(landuse)
green_areas_data$osm_polygons %>%
select(landuse) %>%
group_by(landuse) %>%
table(landuse)
green_areas_data$osm_polygons %>%
select(landuse) %>%
table(landuse)
green_areas_data$osm_polygons %>%
select(landuse) %>%
table()
green_areas_data$osm_polygons %>%
select(landuse)
green_areas_data$osm_polygons %>%
select(landuse) %>%
as.data.frame()
green_areas_data$osm_polygons %>%
select(landuse) %>%
as.data.frame() %>%
group_by(landuse)
green_areas_data$osm_polygons %>%
select(landuse) %>%
as.data.frame() %>%
group_by(landuse) %>%
summarise(n())
green_areas_data$osm_polygons %>%
select(landuse) %>%
group_by(landuse) %>%
summarise(n())
data %>%
select(trees)
data$trees
data$trees$osm_polygons
trees_data <- data$trees
trees_data$osm_polygons
trees_data$osm_points
trees_data$osm_points %>%
select(natural) %>%
group_by(natural) %>%
summarise(n())
visualize_green_spaces(trees_data)
