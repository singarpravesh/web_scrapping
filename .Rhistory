remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
latitude
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
remove(rD)
remove(remDr)
urls
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
latitude
remove(rD)
remove(remDr)
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
urls
# latitude
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
urls
# latitude
latitude <- c()
longitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
latitude
longitude
price <- c()
bhk <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$closeWindow()
}
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
urls
# latitude
latitude <- c()
longitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
remove(rD)
remove(remDr)
price <- c()
bhk <- c()
latitude <- c()
longitude <- c()
remove(latitude)
remove(longitude)
remove(bhk)
remove(price)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
house_data <- tibble(price = as.numeric(Price),
bhk = as.numeric(Bhk),
latitude = as.numeric(Latitude),
longitude = as.numeric(Longitude))
house_data
house_data <- tibble(price = tidyr::parse_number(Price),
bhk = parse_number(Bhk),
latitude = as.numeric(Latitude),
longitude = as.numeric(Longitude))
house_data <- tibble(price = readr::parse_number(Price),
bhk = parse_number(Bhk),
latitude = as.numeric(Latitude),
longitude = as.numeric(Longitude))
library(readr)
house_data <- tibble(price = readr::parse_number(Price),
bhk = parse_number(Bhk),
latitude = as.numeric(Latitude),
longitude = as.numeric(Longitude))
house_data
house_data <- tibble(price = Price,
bhk = Bhk,
latitude = as.numeric(Latitude),
longitude = as.numeric(Longitude))
house_data
house_data <- tibble(price = Price,
bhk = Bhk,
latitude = as.numeric(Latitude),
longitude = as.numeric(Longitude)) |>
mutate(price = tidyr::separate_wider_delim(price, delim = "-",
names = c("price_min", "price_max")))
house_data <- tibble(price = Price,
bhk = Bhk,
latitude = as.numeric(Latitude),
longitude = as.numeric(Longitude)) |>
mutate(price = tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max")))
house_data <- tibble(price = Price,
bhk = Bhk,
latitude = as.numeric(Latitude),
longitude = as.numeric(Longitude)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
house_data <- tibble(price = Price,
bhk = Bhk,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
Latitude
house_data$longitude
length(urls)
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
for (i in 1:length(urls)){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
library(readr)
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
# Scrap the data in page 1
for (i in 1:length(urls)){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
house_data <- tibble(price = Price,
bhk = Bhk,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
View(house_data)
715*25
715*25*10
urls
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
library(readr)
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Price_sqft <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Price_sqft[i] <- remDr$findElements(using = "xpath", '//*[@class="areaRate__avgPrice"]')
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Price_sqft <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Price_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']")
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Price_sqft <- c()
# Scrap the data in page 1
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
Price_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']") |>
sapply(function(x){x$getElementText()[[1]]})
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
house_data <- tibble(price = Price,
bhk = Bhk,
price_sqft = Price_sqft,
latitude = round(as.numeric(Latitude), 8),
longitude = round(as.numeric(Longitude), 8)) |>
tidyr::separate_wider_delim(cols = price, delim = "-",
names = c("price_min", "price_max"))
house_data
remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']")
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']")
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
Price <- c()
Bhk <- c()
Latitude <- c()
Longitude <- c()
Price_sqft <- c()
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
remDr$findElements(using = "xpath", "//*[@class='areaRate__avgPrice']")
198/1700
19800000/1700
remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']")
remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]})
