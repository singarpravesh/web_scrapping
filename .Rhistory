#   browserName = "firefox"
# )
# remDr$open()
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
urls <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
price <- c()
bhk <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$closeWindow()
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_nodes(html, 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
# install.packages("RSelenium")
# install.packages("dplyr")
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
# Method 1
# Install chromedriver
# Documentation at https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf page 16
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Method 2
# Run the following from terminal. Docker required.
# docker pull selenium/standalone-firefox
# docker run -d -p 4445:4444 selenium/standalone-firefox
# Run
# remDr <- remoteDriver(
#   remoteServerAddr = "localhost",
#   port = 4445L,
#   browserName = "firefox"
# )
# remDr$open()
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
urls <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
price <- c()
bhk <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$closeWindow()
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_nodes(html, 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_nodes(html, 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
remDr$findElements(using = "xpath", "//*[@script='application/ld+json']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$findElements(using = "xpath", '//*[@script="application/ld+json"]') |>
sapply(function(x){x$getElementText()[[1]]})
remDr$findElements(using = "xpath", '//*[@script="application/ld+json"]') |>
sapply(function(x){x$getElementText()})
remDr$findElements(using = "xpath", '//*[@type="application/ld+json"]') |>
sapply(function(x){x$getElementText()})
remDr$findElements(using = "xpath", '//[@type="application/ld+json"]') |>
sapply(function(x){x$getElementText()})
remDr$findElements(using = "xpath", '//*[type="application/ld+json"]') |>
sapply(function(x){x$getElementText()})
remDr$findElements(using = "xpath", '//*[@script="data-react-helmet"]') |>
sapply(function(x){x$getElementText()})
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_elements(html, xpath = 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
# install.packages("RSelenium")
# install.packages("dplyr")
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
# Method 1
# Install chromedriver
# Documentation at https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf page 16
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Method 2
# Run the following from terminal. Docker required.
# docker pull selenium/standalone-firefox
# docker run -d -p 4445:4444 selenium/standalone-firefox
# Run
# remDr <- remoteDriver(
#   remoteServerAddr = "localhost",
#   port = 4445L,
#   browserName = "firefox"
# )
# remDr$open()
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
urls <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
price <- c()
bhk <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_elements(html, xpath = 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
html <- read_html_live(urls[1])
json_ld_script <- html_elements(html, xpath = 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
json_ld_data
# latitude
html <- read_html_live(urls[1])
html
# latitude
html <- read_html(urls[1])
# latitude
html <- read_html(urls[1])
# latitude
html <- read_html_live(urls[1])
html
read_html_live(urls[1])$session
read_html_live(urls[1])$session$close
read_html_live(urls[1])$session$close()
read_html_live(urls[1])$session
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# latitude
html <- read_html_live(urls[1])
json_ld_script <- html_elements(html, xpath = 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
html$session$close()
remDr$closeWindow()
}
# install.packages("RSelenium")
# install.packages("dplyr")
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
# Method 1
# Install chromedriver
# Documentation at https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf page 16
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr$closeall()
remDr$getSession$close
remDr$getSession
remDr$closeServer
remDr$closeServer()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# latitude
html <- read_html_live(urls[1])
json_ld_script <- html_elements(html, xpath = 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
html$session$close()
remDr$closeWindow()
}
remDr$closeall()
# install.packages("RSelenium")
# install.packages("dplyr")
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
# Method 1
# Install chromedriver
# Documentation at https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf page 16
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Method 2
# Run the following from terminal. Docker required.
# docker pull selenium/standalone-firefox
# docker run -d -p 4445:4444 selenium/standalone-firefox
# Run
# remDr <- remoteDriver(
#   remoteServerAddr = "localhost",
#   port = 4445L,
#   browserName = "firefox"
# )
# remDr$open()
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
urls <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
price <- c()
bhk <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# latitude
html <- read_html_live(urls[1])
json_ld_script <- html_elements(html, xpath = 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
html$session$close()
remDr$closeWindow()
}
# latitude
html <- read_html_live(urls[1])
html
remDr$getPageSource()
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
urls
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
remDr$getPageSource()
remDr$getPageSource()[[1]]
html <- remDr$getPageSource()[[1]]
html_elements(html, xpath = 'script[type="application/ld+json"]')
read_html(html)
read_html(html) |>
html_elements(html, xpath = 'script[type="application/ld+json"]')
read_html(html) |>
html_elements(html, xpath, 'script[type="application/ld+json"]')
read_html(html) |>
html_elements(xpath, 'script[type="application/ld+json"]')
read_html(html) |>
html_elements(using = 'xpath', 'script[type="application/ld+json"]')
read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
json_ld_data
json_ld_data[[3]]
json_ld_data[[3]]$geo$latitude
latitude <- c()
for (i in 1:2){
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[i]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
remDr$navigate(urls[2])
remDr$navigate(urls[2])
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[i]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
remove(rD)
remove(rD)
remove(remDr)
latitude <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[i]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
urls
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
latitude
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
remove(rD)
remove(remDr)
urls
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remDr$closeWindow()
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(rD)
remove(remDr)
}
latitude
