remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
# latitude
html <- remDr$navigate(urls[1])
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr$closeWindow()
# latitude
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
# Method 1
# Install chromedriver
# Documentation at https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf page 16
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Method 2
# Run the following from terminal. Docker required.
# docker pull selenium/standalone-firefox
# docker run -d -p 4445:4444 selenium/standalone-firefox
# Run
# remDr <- remoteDriver(
#   remoteServerAddr = "localhost",
#   port = 4445L,
#   browserName = "firefox"
# )
# remDr$open()
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
urls <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
price <- c()
bhk <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$closeWindow()
# latitude
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
html <- remDr$navigate(urls[i])
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
# Method 1
# Install chromedriver
# Documentation at https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf page 16
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Method 2
# Run the following from terminal. Docker required.
# docker pull selenium/standalone-firefox
# docker run -d -p 4445:4444 selenium/standalone-firefox
# Run
# remDr <- remoteDriver(
#   remoteServerAddr = "localhost",
#   port = 4445L,
#   browserName = "firefox"
# )
# remDr$open()
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
urls <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
price <- c()
bhk <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$closeWindow()
# latitude
html <- read_html_live(urls[1])
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
library(chromote)
# install.packages("RSelenium")
# install.packages("dplyr")
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
# Method 1
# Install chromedriver
# Documentation at https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf page 16
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Method 2
# Run the following from terminal. Docker required.
# docker pull selenium/standalone-firefox
# docker run -d -p 4445:4444 selenium/standalone-firefox
# Run
# remDr <- remoteDriver(
#   remoteServerAddr = "localhost",
#   port = 4445L,
#   browserName = "firefox"
# )
# remDr$open()
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
urls <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
price <- c()
bhk <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$closeWindow()
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
html <- read_html_live(urls[2])
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude <- json_ld_data[[3]]$geo$latitude
View(html)
urls[2]
html <- read_html_live(urls[2])
html
chrome$close()
html <- read_html_live(urls[2], session = chrome)
html <- read_html_live(urls[2], session = 'chrome')
html <- read_html_live(urls[2])
html
##############################
library(rvest)
library(chromote)
# Create a new Chrome session
chrome <- chromote::Chrome$new()
urls[1:2]
for (i in 1:2) {
html <- read_html_live(urls[i], session = chrome)
# Interact with the fetched HTML content
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
for (i in 1:2) {
html <- read_html_live(urls[i])
# Interact with the fetched HTML content
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
# Create a new Chrome session
chrome <- chromote::Chrome$new()
chrome
for (i in 1:2) {
html <- read_html_live(urls[i])
# Interact with the fetched HTML content
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
urls[2]
# Create a new Chrome session
chrome <- chromote::Chrome$new()
for (i in 1:2) {
html <- read_html_live(urls[i], session = Chrome)
# Interact with the fetched HTML content
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
for (i in 1:2) {
html <- read_html_live(urls[i])
# Interact with the fetched HTML content
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
latitude <- c()
for (i in 1:2) {
html <- read_html_live(urls[i])
# Interact with the fetched HTML content
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
library(rvest)
library(chromote)
latitude <- c()
# Create a new Chrome session
chrome <- chromote::Chrome$new()
# Use read_html_live() to fetch HTML content
for (i in 1:2) {
html <- read_html_live(urls[i])
# Interact with the fetched HTML content
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
chrome$get_path(urls[1])
chrome$navigate()
chrome$navigate(urls[1])
for (i in 1:2) {
html <- read_html_live(urls[i])
# Interact with the fetched HTML content
json_ld_script <- html_nodes(html, "script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_data)
remove(json_ld_script)
}
html <- read_html_live(urls[1])
html
html <- read_html(urls[1])
################################
remDr$findElement(using = "xpath", value = "//script[@type='application/ld+json']")$getElementText()
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
remDr$findElements(using = "css", value="script[type='application/ld+json']")
json_ld_script <- remDr$findElements(using = "css", value="script[type='application/ld+json']")
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
json_ld_script
remDr$navigate(urls[1])
#################
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
# Find all script tags with type="application/ld+json"
script_tags <- remDr$findElements(using = 'css selector', 'script[type="application/ld+json"]')
# Extract the text content of each script tag
json_data <- lapply(script_tags, function(tag) {
tag$getElementText()
})
# Parse the JSON data
json_list <- lapply(json_data, function(x) {
jsonlite::fromJSON(x[[1]], simplifyVector = FALSE)
})
json_data
# Find all script tags with type="application/ld+json"
script_tags <- remDr$findElements(using = 'css selector', 'script[type="application/ld+json"]')
script_tags
# Extract the text content of each script tag
json_data <- lapply(script_tags, function(tag) {
tag$getElementText()
})
json_data
remDr$wait(10, "available", by = "id", "myFrame")
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[1])
remDr$wait(10, "available", by = "id", "myFrame")
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
# Method 1
# Install chromedriver
# Documentation at https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf page 16
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Method 2
# Run the following from terminal. Docker required.
# docker pull selenium/standalone-firefox
# docker run -d -p 4445:4444 selenium/standalone-firefox
# Run
# remDr <- remoteDriver(
#   remoteServerAddr = "localhost",
#   port = 4445L,
#   browserName = "firefox"
# )
# remDr$open()
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
urls <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
price <- c()
bhk <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$closeWindow()
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_nodes(html, 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
# install.packages("RSelenium")
# install.packages("dplyr")
library(RSelenium)
library(dplyr)
library(rvest)
library(jsonlite)
# Method 1
# Install chromedriver
# Documentation at https://cran.r-project.org/web/packages/RSelenium/RSelenium.pdf page 16
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Method 2
# Run the following from terminal. Docker required.
# docker pull selenium/standalone-firefox
# docker run -d -p 4445:4444 selenium/standalone-firefox
# Run
# remDr <- remoteDriver(
#   remoteServerAddr = "localhost",
#   port = 4445L,
#   browserName = "firefox"
# )
# remDr$open()
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page1")
urls <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
price <- c()
bhk <- c()
latitude <- c()
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$closeWindow()
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_nodes(html, 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_nodes(html, 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
remDr$findElements(using = "xpath", "//*[@script='application/ld+json']") |>
sapply(function(x){x$getElementText()[[1]]})
remDr$findElements(using = "xpath", '//*[@script="application/ld+json"]') |>
sapply(function(x){x$getElementText()[[1]]})
remDr$findElements(using = "xpath", '//*[@script="application/ld+json"]') |>
sapply(function(x){x$getElementText()})
remDr$findElements(using = "xpath", '//*[@type="application/ld+json"]') |>
sapply(function(x){x$getElementText()})
remDr$findElements(using = "xpath", '//[@type="application/ld+json"]') |>
sapply(function(x){x$getElementText()})
remDr$findElements(using = "xpath", '//*[type="application/ld+json"]') |>
sapply(function(x){x$getElementText()})
remDr$findElements(using = "xpath", '//*[@script="data-react-helmet"]') |>
sapply(function(x){x$getElementText()})
for (i in 1:2){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
remDr$navigate(urls[i])
price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
# latitude
html <- read_html_live(urls[i])
json_ld_script <- html_elements(html, xpath = 'script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
latitude[i] <- json_ld_data[[3]]$geo$latitude
remove(html)
remove(json_ld_script)
remove(json_ld_data)
remDr$closeWindow()
}
