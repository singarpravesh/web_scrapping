Longitude[i] <- json_ld_data[[3]]$geo$longitude
}, error = function(e) {
message("Coordinates not found: ", e$message)
})
# Top facilities
tryCatch({
Top_facilities[i] <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
}, error = function(e) {
message("Top facilities not found: ", e$message)
})
# Other facilities
tryCatch({
remDr$executeScript("window.scrollTo(0,1700);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 21000) # Wait to load the page
if (element_exists("css", ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]] # Get the HTML content of the pop up page after click
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
} else {
Other_facilities[i] <- NA
}
}, error = function(e) {
message("Other facilities not found: ", e$message)
})
# Locational advantages
tryCatch({
remDr$executeScript("window.scrollTo(0,2100);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (element_exists("css", ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages[i] <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
} else {
Locational_advantages[i] <- NA
}
if (!is.na(Locational_advantages[i])){
Distance_to_locational_advantage[i]<- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
} else {
Distance_to_locational_advantage[i] <- NA
}
}, error = function(e) {
message("Locational advantages not found: ", e$message)
})
remDr$closeWindow()
rD$server$stop()
# Remove the objects that can clutter the environment
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(html_page)
remove(rD)
remove(remDr)
gc()
}
toc()
housing_data_page16 <- tibble(
price = Price,
bhk = Bhk ,
area_sqft = Area_sqft,
latitude = Latitude ,
longitude = Longitude ,
top_facilities = Top_facilities,
other_facilities = Other_facilities,
locational_advantages = Locational_advantages,
distance_to_locational_advantage = Distance_to_locational_advantage
)
rm(urls16)
mget(paste0('housing_data_page', 1:21)) |>
bind_rows() -> housing_data
housing_data
library(RSelenium)
library(rvest)
library(jsonlite)
library(dplyr)
library(tictoc)
# Activate firefox
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# navigate to page 6
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page-22")
# Get all the urls in page 4
urls22 <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
# Get all the urls in page 4
urls22 <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
rD$server$stop()
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
tic("Time")
for (i in 1:length(urls22)){
# Initialize RSelenium
rD <- rsDriver(browser="firefox", chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Navigate to the URL
remDr$navigate(urls22[i])
# Helper function to check if element exists
element_exists <- function(using, value) {
length(remDr$findElements(using = using, value = value)) > 0
}
# Click the OK button if it exists
if (element_exists("css", ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")) {
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
} else {
message("OK button not found or could not be clicked")
}
# Data for price
if (element_exists("xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']")) {
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
Price[i] <- NA
}
# BHK data
if (element_exists("xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']")) {
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
Bhk[i] <- NA
}
# Area data
if (element_exists("xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']")) {
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
} else {
Area_sqft[i] <- NA
}
# Coordinates of the property
tryCatch({
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
}, error = function(e) {
message("Coordinates not found: ", e$message)
})
# Top facilities
tryCatch({
Top_facilities[i] <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
}, error = function(e) {
message("Top facilities not found: ", e$message)
})
# Other facilities
tryCatch({
remDr$executeScript("window.scrollTo(0,1700);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 21000) # Wait to load the page
if (element_exists("css", ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]] # Get the HTML content of the pop up page after click
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
} else {
Other_facilities[i] <- NA
}
}, error = function(e) {
message("Other facilities not found: ", e$message)
})
# Locational advantages
tryCatch({
remDr$executeScript("window.scrollTo(0,2100);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (element_exists("css", ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages[i] <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
} else {
Locational_advantages[i] <- NA
}
if (!is.na(Locational_advantages[i])){
Distance_to_locational_advantage[i]<- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
} else {
Distance_to_locational_advantage[i] <- NA
}
}, error = function(e) {
message("Locational advantages not found: ", e$message)
})
remDr$closeWindow()
rD$server$stop()
# Remove the objects that can clutter the environment
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(html_page)
remove(rD)
remove(remDr)
gc()
}
toc()
housing_data_page22 <- tibble(
price = Price,
bhk = Bhk ,
area_sqft = Area_sqft,
latitude = Latitude ,
longitude = Longitude ,
top_facilities = Top_facilities,
other_facilities = Other_facilities,
locational_advantages = Locational_advantages,
distance_to_locational_advantage = Distance_to_locational_advantage
)
rm(urls22)
# Activate firefox
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# navigate to page 6
remDr$navigate("https://www.99acres.com/property-in-kolkata-ffid-page-23")
# Get all the urls in page 4
urls23 <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
rD$server$stop()
# Initalise the variables
Price <- c()
# Structural variables
Bhk <- c() # No of rooms (1,2,3,4)
Area_sqft <- list()
# Locational variables
Latitude <- c()
Longitude <- c()
Top_facilities <- list()
Other_facilities <- list()
Locational_advantages <- list()
Distance_to_locational_advantage <- list()
tic("Time")
for (i in 1:length(urls23)){
# Initialize RSelenium
rD <- rsDriver(browser="firefox", chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# Navigate to the URL
remDr$navigate(urls23[i])
# Helper function to check if element exists
element_exists <- function(using, value) {
length(remDr$findElements(using = using, value = value)) > 0
}
# Click the OK button if it exists
if (element_exists("css", ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")) {
remDr$findElement(using = "css", value = ".ReraDisclaimer__topDisclaimer > div:nth-child(1) > div:nth-child(2) > button:nth-child(1)")$clickElement()
} else {
message("OK button not found or could not be clicked")
}
# Data for price
if (element_exists("xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']")) {
Price[i] <- remDr$findElements(using = "xpath", "//*[@class='list_header_semiBold configurationCards__configurationCardsHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
Price[i] <- NA
}
# BHK data
if (element_exists("xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']")) {
Bhk[i] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis list_header_semiBold configurationCards__configurationCardsSubHeading']") |>
sapply(function(x){x$getElementText()[[1]]})
} else {
Bhk[i] <- NA
}
# Area data
if (element_exists("xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']")) {
Area_sqft[i] <- remDr$findElements(using = "xpath", "//*[@class='caption_subdued_medium configurationCards__cardAreaSubHeadingOne']") |>
sapply(function(x){x$getElementText()[[1]]}) %>%
list()
} else {
Area_sqft[i] <- NA
}
# Coordinates of the property
tryCatch({
html <- remDr$getPageSource()[[1]]
json_ld_script <- read_html(html) |>
html_nodes('script[type="application/ld+json"]')
json_ld_data <- lapply(json_ld_script, function(x) {
json_str <- html_text(x)
fromJSON(json_str)
})
Latitude[i] <- json_ld_data[[3]]$geo$latitude
Longitude[i] <- json_ld_data[[3]]$geo$longitude
}, error = function(e) {
message("Coordinates not found: ", e$message)
})
# Top facilities
tryCatch({
Top_facilities[i] <- read_html(html) |>
html_nodes('div[class="UniquesFacilities__xidFacilitiesCard"]') %>%
html_text() %>% list()
}, error = function(e) {
message("Top facilities not found: ", e$message)
})
# Other facilities
tryCatch({
remDr$executeScript("window.scrollTo(0,1700);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 21000) # Wait to load the page
if (element_exists("css", ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".UniquesFacilities__pageHeadingWrapper > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]] # Get the HTML content of the pop up page after click
Other_facilities[i] <- read_html(html_page) |>
html_nodes('div[class="body_med"]') %>%
html_text() %>% list()
} else {
Other_facilities[i] <- NA
}
}, error = function(e) {
message("Other facilities not found: ", e$message)
})
# Locational advantages
tryCatch({
remDr$executeScript("window.scrollTo(0,2100);") # Scroll to the specific section
remDr$setTimeout(type = "implicit", milliseconds = 20000) # Wait to load the page
if (element_exists("css", ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")) {
remDr$findElement(using = "css", value = ".OrderComponent__leftSection > div:nth-child(5) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > a:nth-child(2)")$clickElement()
html_page <- remDr$getPageSource()[[1]]
Locational_advantages[i] <- read_html(html_page) |>
html_nodes('div[class="list_header_semiBold spacer2 ellipsis"]') %>%
html_text() %>% list()
} else {
Locational_advantages[i] <- NA
}
if (!is.na(Locational_advantages[i])){
Distance_to_locational_advantage[i]<- read_html(html_page) |>
html_nodes('div[class="caption_subdued_medium ellipsis"]') %>%
html_text() %>% list()
} else {
Distance_to_locational_advantage[i] <- NA
}
}, error = function(e) {
message("Locational advantages not found: ", e$message)
})
remDr$closeWindow()
rD$server$stop()
# Remove the objects that can clutter the environment
remove(html)
remove(json_ld_data)
remove(json_ld_script)
remove(html_page)
remove(rD)
remove(remDr)
gc()
}
toc()
housing_data_page23 <- tibble(
price = Price,
bhk = Bhk ,
area_sqft = Area_sqft,
latitude = Latitude ,
longitude = Longitude ,
top_facilities = Top_facilities,
other_facilities = Other_facilities,
locational_advantages = Locational_advantages,
distance_to_locational_advantage = Distance_to_locational_advantage
)
library(osmdata)
library(sf)
library(leaflet)
# Define the name of the place
place_name <- "Kolkata, India"
# Query OpenStreetMap for the boundary of Kolkata
kolkata_boundary <- opq(place_name) %>%
add_osm_feature(key = "boundary", value = "administrative") %>%
add_osm_feature(key = "admin_level", value = "6") %>%
osmdata_sf()
# Query OpenStreetMap for the boundary of Kolkata
kolkata_boundary <- opq(place_name) %>%
add_osm_feature(key = "boundary", value = "administrative") %>%
add_osm_feature(key = "admin_level", value = "6") %>%
osmdata_sf()
# Extract the boundary polygon
kolkata_boundary_lines <- kolkata_boundary$osm_lines
# Create a leaflet map centered on Kolkata
map <- leaflet() %>%
addTiles() %>%
setView(lng = 88.3639, lat = 22.5726, zoom = 12)  # Coordinates for Kolkata
map
map %>%
addCircleMarkers(
lng = housing_data$longitude,
lat = housing_data$latitude,
popup = paste("Price:", housing_data$price, "<br>",
"Size:", housing_data$area_sqft, "<br>",
"Bedrooms:", housing_data$bhk),
radius = 5,
color = "blue",
fillOpacity = 0.5
)
# Add points for each house
map <- map %>%
addCircleMarkers(
lng = housing_data$longitude,
lat = housing_data$latitude,
popup = paste("Price:", housing_data$price, "<br>",
"Size:", housing_data$area_sqft, "<br>",
"Bedrooms:", housing_data$bhk),
radius = 5,
color = "blue",
fillOpacity = 0.5
)
map <- map %>%
addPolygons(
data = green_areas_data$osm_polygons,
fillColor = "green",
fillOpacity = 0.5,
color = "green",
weight = 1
)
map
# Create a leaflet map centered on Kolkata
map <- leaflet() %>%
addTiles() %>%
setView(lng = 88.3639, lat = 22.5726, zoom = 12)  # Coordinates for Kolkata
map
# Add points for each house
map <- map %>%
addCircleMarkers(
lng = housing_data$longitude,
lat = housing_data$latitude,
popup = paste("Price:", housing_data$price, "<br>",
"Size:", housing_data$area_sqft, "<br>",
"Bedrooms:", housing_data$bhk),
radius = 5,
color = "blue",
fillOpacity = 0.5
)
map
# Add Kolkata boundary to the map
map <- map %>%
addPolylines(
data = kolkata_boundary_lines,
color = "red",
weight = 3,
dashArray = "5, 10",  # Make the line dashed
opacity = 1
)
# Add green spaces to the map
map <- map %>%
addPolygons(
data = green_areas_data$osm_polygons,
fillColor = "green",
fillOpacity = 0.5,
color = "green",
weight = 1
)
map
kolkata_boundary_lines
install.packages('ggmap')
library(RSelenium)
library(rvest)
library(jsonlite)
library(dplyr)
library(tictoc)
urls <- c()
for (j in 23:50){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# navigate to page 6
remDr$navigate(paste0("https://www.99acres.com/property-in-kolkata-ffid-page-23", j))
# Get all the urls in page 4
urls[j] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
rD$server$stop()
}
urls <- c()
for (j in 23:50){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# navigate to page 6
remDr$navigate(paste0("https://www.99acres.com/property-in-kolkata-ffid-page-23", j))
# Get all the urls in page 4
urls[j] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
rD$server$stop()
}
# Activate firefox
urls <- c()
for (j in 23:50){
rD <- rsDriver(browser="firefox",chromever = NULL, port=netstat::free_port(), verbose=F)
remDr <- rD[["client"]]
# navigate to page 6
remDr$navigate(paste0("https://www.99acres.com/property-in-kolkata-ffid-page-", j))
# Get all the urls in page 4
urls[j] <- remDr$findElements(using = "xpath", "//*[@class='ellipsis']") |>
sapply(function(x){x$getElementAttribute("href")}[[1]])
remDr$closeWindow()
rD$server$stop()
}
